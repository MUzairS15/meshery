{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "Key",
  "apiVersion": "kms.services.k8s.aws/v1alpha1",
  "displayName": "Key",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "aws-kms-controller",
   "version": "v1.0.10",
   "displayName": "aws-kms-controller",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "git://github.com/aws-controllers-k8s/kms-controller/main/helm"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"Key is the Schema for the Keys API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"KeySpec defines the desired state of Key.\",\n   \"properties\": {\n    \"bypassPolicyLockoutSafetyCheck\": {\n     \"description\": \"A flag to indicate whether to bypass the key policy lockout safety check.\\n\\n\\nSetting this value to true increases the risk that the KMS key becomes unmanageable.\\nDo not set this value to true indiscriminately.\\n\\n\\nFor more information, refer to the scenario in the Default Key Policy (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam)\\nsection in the Key Management Service Developer Guide .\\n\\n\\nUse this parameter only when you include a policy in the request and you\\nintend to prevent the principal that is making the request from making a\\nsubsequent PutKeyPolicy request on the KMS key.\\n\\n\\nThe default value is false.\",\n     \"type\": \"boolean\"\n    },\n    \"customKeyStoreID\": {\n     \"description\": \"Creates the KMS key in the specified custom key store (https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html)\\nand the key material in its associated CloudHSM cluster. To create a KMS\\nkey in a custom key store, you must also specify the Origin parameter with\\na value of AWS_CLOUDHSM. The CloudHSM cluster that is associated with the\\ncustom key store must have at least two active HSMs, each in a different\\nAvailability Zone in the Region.\\n\\n\\nThis parameter is valid only for symmetric encryption KMS keys in a single\\nRegion. You cannot create any other type of KMS key in a custom key store.\\n\\n\\nTo find the ID of a custom key store, use the DescribeCustomKeyStores operation.\\n\\n\\nThe response includes the custom key store ID and the ID of the CloudHSM\\ncluster.\\n\\n\\nThis operation is part of the custom key store feature (https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html)\\nfeature in KMS, which combines the convenience and extensive integration\\nof KMS with the isolation and control of a single-tenant key store.\",\n     \"type\": \"string\"\n    },\n    \"description\": {\n     \"description\": \"A description of the KMS key.\\n\\n\\nUse a description that helps you decide whether the KMS key is appropriate\\nfor a task. The default value is an empty string (no description).\\n\\n\\nTo set or change the description after the key is created, use UpdateKeyDescription.\",\n     \"type\": \"string\"\n    },\n    \"enableKeyRotation\": {\n     \"type\": \"boolean\"\n    },\n    \"keySpec\": {\n     \"description\": \"Specifies the type of KMS key to create. The default value, SYMMETRIC_DEFAULT,\\ncreates a KMS key with a 256-bit AES-GCM key that is used for encryption\\nand decryption, except in China Regions, where it creates a 128-bit symmetric\\nkey that uses SM4 encryption. For help choosing a key spec for your KMS key,\\nsee Choosing a KMS key type (https://docs.aws.amazon.com/kms/latest/developerguide/key-types.html#symm-asymm-choose)\\nin the Key Management Service Developer Guide .\\n\\n\\nThe KeySpec determines whether the KMS key contains a symmetric key or an\\nasymmetric key pair. It also determines the cryptographic algorithms that\\nthe KMS key supports. You can't change the KeySpec after the KMS key is created.\\nTo further restrict the algorithms that can be used with the KMS key, use\\na condition key in its key policy or IAM policy. For more information, see\\nkms:EncryptionAlgorithm (https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-encryption-algorithm),\\nkms:MacAlgorithm (https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-mac-algorithm)\\nor kms:Signing Algorithm (https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-signing-algorithm)\\nin the Key Management Service Developer Guide .\\n\\n\\nAmazon Web Services services that are integrated with KMS (http://aws.amazon.com/kms/features/#AWS_Service_Integration)\\nuse symmetric encryption KMS keys to protect your data. These services do\\nnot support asymmetric KMS keys or HMAC KMS keys.\\n\\n\\nKMS supports the following key specs for KMS keys:\\n\\n\\n  - Symmetric encryption key (default) SYMMETRIC_DEFAULT\\n\\n\\n  - HMAC keys (symmetric) HMAC_224 HMAC_256 HMAC_384 HMAC_512\\n\\n\\n  - Asymmetric RSA key pairs RSA_2048 RSA_3072 RSA_4096\\n\\n\\n  - Asymmetric NIST-recommended elliptic curve key pairs ECC_NIST_P256 (secp256r1)\\n    ECC_NIST_P384 (secp384r1) ECC_NIST_P521 (secp521r1)\\n\\n\\n  - Other asymmetric elliptic curve key pairs ECC_SECG_P256K1 (secp256k1),\\n    commonly used for cryptocurrencies.\\n\\n\\n  - SM2 key pairs (China Regions only) SM2\",\n     \"type\": \"string\"\n    },\n    \"keyUsage\": {\n     \"description\": \"Determines the cryptographic operations (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)\\nfor which you can use the KMS key. The default value is ENCRYPT_DECRYPT.\\nThis parameter is optional when you are creating a symmetric encryption KMS\\nkey; otherwise, it is required. You can't change the KeyUsage value after\\nthe KMS key is created.\\n\\n\\nSelect only one valid value.\\n\\n\\n  - For symmetric encryption KMS keys, omit the parameter or specify ENCRYPT_DECRYPT.\\n\\n\\n  - For HMAC KMS keys (symmetric), specify GENERATE_VERIFY_MAC.\\n\\n\\n  - For asymmetric KMS keys with RSA key material, specify ENCRYPT_DECRYPT\\n    or SIGN_VERIFY.\\n\\n\\n  - For asymmetric KMS keys with ECC key material, specify SIGN_VERIFY.\\n\\n\\n  - For asymmetric KMS keys with SM2 key material (China Regions only),\\n    specify ENCRYPT_DECRYPT or SIGN_VERIFY.\",\n     \"type\": \"string\"\n    },\n    \"multiRegion\": {\n     \"description\": \"Creates a multi-Region primary key that you can replicate into other Amazon\\nWeb Services Regions. You cannot change this value after you create the KMS\\nkey.\\n\\n\\nFor a multi-Region key, set this parameter to True. For a single-Region KMS\\nkey, omit this parameter or set it to False. The default value is False.\\n\\n\\nThis operation supports multi-Region keys, an KMS feature that lets you create\\nmultiple interoperable KMS keys in different Amazon Web Services Regions.\\nBecause these KMS keys have the same key ID, key material, and other metadata,\\nyou can use them interchangeably to encrypt data in one Amazon Web Services\\nRegion and decrypt it in a different Amazon Web Services Region without re-encrypting\\nthe data or making a cross-Region call. For more information about multi-Region\\nkeys, see Multi-Region keys in KMS (https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)\\nin the Key Management Service Developer Guide.\\n\\n\\nThis value creates a primary key, not a replica. To create a replica key,\\nuse the ReplicateKey operation.\\n\\n\\nYou can create a multi-Region version of a symmetric encryption KMS key,\\nan HMAC KMS key, an asymmetric KMS key, or a KMS key with imported key material.\\nHowever, you cannot create a multi-Region key in a custom key store.\",\n     \"type\": \"boolean\"\n    },\n    \"origin\": {\n     \"description\": \"The source of the key material for the KMS key. You cannot change the origin\\nafter you create the KMS key. The default is AWS_KMS, which means that KMS\\ncreates the key material.\\n\\n\\nTo create a KMS key with no key material (for imported key material), set\\nthe value to EXTERNAL. For more information about importing key material\\ninto KMS, see Importing Key Material (https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html)\\nin the Key Management Service Developer Guide. This value is valid only for\\nsymmetric encryption KMS keys.\\n\\n\\nTo create a KMS key in an KMS custom key store (https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html)\\nand create its key material in the associated CloudHSM cluster, set this\\nvalue to AWS_CLOUDHSM. You must also use the CustomKeyStoreId parameter to\\nidentify the custom key store. This value is valid only for symmetric encryption\\nKMS keys.\",\n     \"type\": \"string\"\n    },\n    \"policy\": {\n     \"description\": \"The key policy to attach to the KMS key. If you do not specify a key policy,\\nKMS attaches a default key policy to the KMS key. For more information, see\\nDefault key policy (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default)\\nin the Key Management Service Developer Guide.\\n\\n\\nIf you provide a key policy, it must meet the following criteria:\\n\\n\\n  - If you don't set BypassPolicyLockoutSafetyCheck to True, the key policy\\n    must allow the principal that is making the CreateKey request to make\\n    a subsequent PutKeyPolicy request on the KMS key. This reduces the risk\\n    that the KMS key becomes unmanageable. For more information, refer to\\n    the scenario in the Default Key Policy (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam)\\n    section of the Key Management Service Developer Guide .\\n\\n\\n  - Each statement in the key policy must contain one or more principals.\\n    The principals in the key policy must exist and be visible to KMS. When\\n    you create a new Amazon Web Services principal (for example, an IAM user\\n    or role), you might need to enforce a delay before including the new principal\\n    in a key policy because the new principal might not be immediately visible\\n    to KMS. For more information, see Changes that I make are not always immediately\\n    visible (https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency)\\n    in the Amazon Web Services Identity and Access Management User Guide.\\n\\n\\nA key policy document can include only the following characters:\\n\\n\\n  - Printable ASCII characters from the space character (\\\\u0020) through\\n    the end of the ASCII character range.\\n\\n\\n  - Printable characters in the Basic Latin and Latin-1 Supplement character\\n    set (through \\\\u00FF).\\n\\n\\n  - The tab (\\\\u0009), line feed (\\\\u000A), and carriage return (\\\\u000D) special\\n    characters\\n\\n\\nFor information about key policies, see Key policies in KMS (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html)\\nin the Key Management Service Developer Guide. For help writing and formatting\\na JSON policy document, see the IAM JSON Policy Reference (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html)\\nin the Identity and Access Management User Guide .\",\n     \"type\": \"string\"\n    },\n    \"tags\": {\n     \"description\": \"Assigns one or more tags to the KMS key. Use this parameter to tag the KMS\\nkey when it is created. To tag an existing KMS key, use the TagResource operation.\\n\\n\\nTagging or untagging a KMS key can allow or deny permission to the KMS key.\\nFor details, see ABAC in KMS (https://docs.aws.amazon.com/kms/latest/developerguide/abac.html)\\nin the Key Management Service Developer Guide.\\n\\n\\nTo use this parameter, you must have kms:TagResource (https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html)\\npermission in an IAM policy.\\n\\n\\nEach tag consists of a tag key and a tag value. Both the tag key and the\\ntag value are required, but the tag value can be an empty (null) string.\\nYou cannot have more than one tag on a KMS key with the same tag key. If\\nyou specify an existing tag key with a different tag value, KMS replaces\\nthe current tag value with the specified one.\\n\\n\\nWhen you add tags to an Amazon Web Services resource, Amazon Web Services\\ngenerates a cost allocation report with usage and costs aggregated by tags.\\nTags can also be used to control access to a KMS key. For details, see Tagging\\nKeys (https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html).\",\n     \"items\": {\n      \"description\": \"A key-value pair. A tag consists of a tag key and a tag value. Tag keys and\\ntag values are both required, but tag values can be empty (null) strings.\\n\\n\\nFor information about the rules that apply to tag keys and tag values, see\\nUser-Defined Tag Restrictions (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html)\\nin the Amazon Web Services Billing and Cost Management User Guide.\",\n      \"properties\": {\n       \"tagKey\": {\n        \"type\": \"string\"\n       },\n       \"tagValue\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Key\",\n \"type\": \"object\"\n}"
 }