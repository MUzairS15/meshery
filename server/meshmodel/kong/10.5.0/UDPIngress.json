{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "UDPIngress",
  "apiVersion": "configuration.konghq.com/v1beta1",
  "displayName": "UDP Ingress",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "kong",
   "version": "10.5.0",
   "displayName": "kong",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://charts.bitnami.com/bitnami/kong-10.5.0.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"UDPIngress is the Schema for the udpingresses API.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec is the UDPIngress specification.\",\n   \"properties\": {\n    \"rules\": {\n     \"description\": \"A list of rules used to configure the Ingress.\",\n     \"items\": {\n      \"description\": \"UDPIngressRule represents a rule to apply against incoming requests wherein no Host matching is available for request routing, only the port is used to match requests.\",\n      \"properties\": {\n       \"backend\": {\n        \"description\": \"Backend defines the Kubernetes service which accepts traffic from the listening Port defined above.\",\n        \"properties\": {\n         \"serviceName\": {\n          \"description\": \"Specifies the name of the referenced service.\",\n          \"minLength\": 1,\n          \"type\": \"string\"\n         },\n         \"servicePort\": {\n          \"description\": \"Specifies the port of the referenced service.\",\n          \"format\": \"int32\",\n          \"maximum\": 65535,\n          \"minimum\": 1,\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"serviceName\",\n         \"servicePort\"\n        ],\n        \"type\": \"object\"\n       },\n       \"port\": {\n        \"description\": \"Port indicates the port for the Kong proxy to accept incoming traffic on, which will then be routed to the service Backend.\",\n        \"format\": \"int32\",\n        \"maximum\": 65535,\n        \"minimum\": 1,\n        \"type\": \"integer\"\n       }\n      },\n      \"required\": [\n       \"backend\",\n       \"port\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"UDP Ingress\",\n \"type\": \"object\"\n}"
 }