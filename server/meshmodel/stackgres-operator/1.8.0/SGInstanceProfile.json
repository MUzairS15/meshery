{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "SGInstanceProfile",
  "apiVersion": "stackgres.io/v1",
  "displayName": "SG Instance Profile",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "stackgres-operator",
   "version": "1.8.0",
   "displayName": "stackgres-operator",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://stackgres.io/downloads/stackgres-k8s/stackgres/1.8.0/helm/stackgres-operator.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"properties\": {\n    \"containers\": {\n     \"additionalProperties\": {\n      \"description\": \"The CPU(s) (cores) and RAM limits assigned to a container.\\n\\nThis section, if left empty, will be filled automatically by the operator with\\n  some defaults that can be proportional to the resources limits assigned to patroni\\n  container (except for the huge pages that are always left untouched).\\n\",\n      \"properties\": {\n       \"cpu\": {\n        \"description\": \"CPU(s) (cores) limits for the specified container. The suffix `m`\\n  specifies millicpus (where 1000m is equals to 1).\\n\",\n        \"pattern\": \"^[1-9][0-9]*[m]?$\",\n        \"type\": \"string\"\n       },\n       \"hugePages\": {\n        \"description\": \"RAM limits for huge pages for the specified container.\\n\",\n        \"properties\": {\n         \"hugepages-1Gi\": {\n          \"description\": \"RAM limits for huge pages of the specified container with a size of 1Gi. The suffix `Mi`\\n  or `Gi` specifies Mebibytes or Gibibytes, respectively.\\n\",\n          \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n          \"type\": \"string\"\n         },\n         \"hugepages-2Mi\": {\n          \"description\": \"RAM limits for huge pages of the specified container with a size of 2Mi. The suffix `Mi`\\n  or `Gi` specifies Mebibytes or Gibibytes, respectively.\\n\",\n          \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"memory\": {\n        \"description\": \"RAM limits for the specified container. The suffix `Mi` or `Gi`\\n  specifies Mebibytes or Gibibytes, respectively.\\n\",\n        \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"description\": \"The CPU(s) (cores) and RAM limits assigned to containers other than patroni container.\\n\",\n     \"type\": \"object\"\n    },\n    \"cpu\": {\n     \"description\": \"CPU(s) (cores) limits for every resource's Pod that reference this SGInstanceProfile. The suffix `m`\\n  specifies millicpus (where 1000m is equals to 1).\\n\\nThe number of cpu limits is assigned to the patroni container (that runs both Patroni and PostgreSQL).\\n\\nA minimum of 2 cpu is recommended.\\n\",\n     \"pattern\": \"^[1-9][0-9]*[m]?$\",\n     \"type\": \"string\"\n    },\n    \"hugePages\": {\n     \"description\": \"RAM limits allocated for huge pages of the patroni container (that runs both Patroni and PostgreSQL).\\n\",\n     \"properties\": {\n      \"hugepages-1Gi\": {\n       \"description\": \"RAM limits allocated for huge pages of the patroni container (that runs both Patroni and PostgreSQL) with a size of 1Gi. The suffix `Mi` or `Gi`\\n  specifies Mebibytes or Gibibytes, respectively.\\n\",\n       \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n       \"type\": \"string\"\n      },\n      \"hugepages-2Mi\": {\n       \"description\": \"RAM limits allocated for huge pages of the patroni container (that runs both Patroni and PostgreSQL) with a size of 2Mi. The suffix `Mi` or `Gi`\\n  specifies Mebibytes or Gibibytes, respectively.\\n\",\n       \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"initContainers\": {\n     \"additionalProperties\": {\n      \"description\": \"The CPU(s) (cores) and RAM limits assigned to a init container.\\n\\nThis section will be filled automatically by the operator with\\n  the same values of the resources limits assigned to patroni\\n  container (except for the huge pages that are always left untouched).\\n\",\n      \"properties\": {\n       \"cpu\": {\n        \"description\": \"CPU(s) (cores) limits for the specified init container. The suffix\\n  `m` specifies millicpus (where 1000m is equals to 1).\\n\",\n        \"pattern\": \"^[1-9][0-9]*[m]?$\",\n        \"type\": \"string\"\n       },\n       \"hugePages\": {\n        \"description\": \"RAM limits for huge pages of the specified init container\\n\",\n        \"properties\": {\n         \"hugepages-1Gi\": {\n          \"description\": \"RAM limits for huge pages of the specified init container with a size of 1Gi. The suffix `Mi` or `Gi`\\n  specifies Mebibytes or Gibibytes, respectively.\\n\",\n          \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n          \"type\": \"string\"\n         },\n         \"hugepages-2Mi\": {\n          \"description\": \"RAM limits for huge pages of the specified init container with a size of 2Mi. The suffix `Mi`\\n  or `Gi` specifies Mebibytes or Gibibytes, respectively.\\n\",\n          \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"memory\": {\n        \"description\": \"RAM limits for the specified init container. The suffix `Mi`\\n  or `Gi` specifies Mebibytes or Gibibytes, respectively.\\n\",\n        \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"description\": \"The CPU(s) (cores) and RAM limits assigned to the init containers.\",\n     \"type\": \"object\"\n    },\n    \"memory\": {\n     \"description\": \"RAM limits for every resource's Pod that reference this SGInstanceProfile. The suffix `Mi` or `Gi`\\n  specifies Mebibytes or Gibibytes, respectively.\\n\\nThe amount of RAM limits is assigned to the patroni container (that runs both Patroni and PostgreSQL).\\n\\nA minimum of 2Gi is recommended.\\n\",\n     \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n     \"type\": \"string\"\n    },\n    \"requests\": {\n     \"description\": \"This section allow to configure the resources requests for each container and, if not specified, it is filled with some defaults based on the fields `.spec.cpu` and `.spec.memory` will be set.\\n\\nOn containerized environments, when running production workloads, enforcing container's resources requirements requests to be equals to the limits in order to achieve the highest level of performance. Doing so, reduces the chances of leaving\\n the workload with less resources than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.\\n There are cases where you may need to set cpu requests to the same value as cpu limits in order to achieve static CPU management policy.\\n\\nBy default the resources requests values in fields `.spec.requests.cpu` and `.spec.requests.memory` represent the total resources requests assigned to each resource's Pod that reference this SGInstanceProfile.\\n The resources requests of the patroni container (that runs both Patroni and PostgreSQL) is calculated by subtracting from the total resources requests the resources requests of other containers that are present in the Pod.\\n To change this behavior and having the resources requests values in fields `.spec.requests.cpu` and `.spec.requests.memory` to represent the resources requests of the patroni container and the total resources requests\\n calculated by adding the resources requests of all the containers (including the patroni container) you may set one or more of the following fields to `true`\\n (depending on the resource's Pods you need this behaviour to be changed):\\n \\n* `SGCluster.spec.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.coordinator.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.shards.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.shards.ovewrites.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGDistributedLogs.spec.resources.disableResourcesRequestsSplitFromTotal`\\n\",\n     \"properties\": {\n      \"containers\": {\n       \"additionalProperties\": {\n        \"description\": \"The CPU(s) (cores) and RAM requests assigned to a container.\\n\\nThis section, if left empty, will be filled automatically by the operator with\\n  some defaults that can be proportional to the resources assigned to patroni\\n  container (except for the huge pages that are always left untouched).\\n\",\n        \"properties\": {\n         \"cpu\": {\n          \"description\": \"CPU(s) (cores) requests for the specified container. The suffix `m`\\n  specifies millicpus (where 1000m is equals to 1).\\n\",\n          \"pattern\": \"^[1-9][0-9]*[m]?$\",\n          \"type\": \"string\"\n         },\n         \"memory\": {\n          \"description\": \"RAM requests for the specified container. The suffix `Mi` or `Gi`\\n  specifies Mebibytes or Gibibytes, respectively.\\n\",\n          \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"description\": \"The CPU(s) (cores) and RAM requests assigned to containers other than patroni container.\\n\",\n       \"type\": \"object\"\n      },\n      \"cpu\": {\n       \"description\": \"CPU(s) (cores) requests for every resource's Pod that reference this SGInstanceProfile. The suffix `m`\\n  specifies millicpus (where 1000m is equals to 1).\\n\\nBy default the cpu requests values in field `.spec.requests.cpu` represent the total cpu requests assigned to each resource's Pod that reference this SGInstanceProfile.\\n The cpu requests of the patroni container (that runs both Patroni and PostgreSQL) is calculated by subtracting from the total cpu requests the cpu requests of other containers that are present in the Pod.\\n To change this behavior and having the cpu requests values in field `.spec.requests.cpu` to represent the cpu requests of the patroni container and the total cpu requests\\n calculated by adding the cpu requests of all the containers (including the patroni container) you may set one or more of the following fields to `true`\\n (depending on the resource's Pods you need this behaviour to be changed):\\n \\n* `SGCluster.spec.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.coordinator.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.shards.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.shards.ovewrites.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGDistributedLogs.spec.resources.disableResourcesRequestsSplitFromTotal`\\n\",\n       \"pattern\": \"^[1-9][0-9]*[m]?$\",\n       \"type\": \"string\"\n      },\n      \"initContainers\": {\n       \"additionalProperties\": {\n        \"description\": \"The CPU(s) (cores) and RAM requests assigned to a init container.\\n\\nThis section will be filled automatically by the operator with\\n  the same values of the resources requests assigned to patroni\\n  container (except for the huge pages that are always left untouched).\\n\",\n        \"properties\": {\n         \"cpu\": {\n          \"description\": \"CPU(s) (cores) requests for the specified init container. The suffix\\n  `m` specifies millicpus (where 1000m is equals to 1).\\n\",\n          \"pattern\": \"^[1-9][0-9]*[m]?$\",\n          \"type\": \"string\"\n         },\n         \"memory\": {\n          \"description\": \"RAM requests for the specified init container. The suffix `Mi`\\n  or `Gi` specifies Mebibytes or Gibibytes, respectively.\\n\",\n          \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"description\": \"The CPU(s) (cores) and RAM requests assigned to init containers.\",\n       \"type\": \"object\"\n      },\n      \"memory\": {\n       \"description\": \"RAM requests for every resource's Pod that reference this SGInstanceProfile. The suffix `Mi` or `Gi`\\n  specifies Mebibytes or Gibibytes, respectively.\\n\\nBy default the memory requests values in field `.spec.requests.memory` represent the total memory requests assigned to each resource's Pod that reference this SGInstanceProfile.\\n The memory requests of the patroni container (that runs both Patroni and PostgreSQL) is calculated by subtracting from the total memory requests the memory requests of other containers that are present in the Pod.\\n To change this behavior and having the memory requests values in field `.spec.requests.memory` to represent the memory requests of the patroni container and the total memory requests\\n calculated by adding the memory requests of all the containers (including the patroni container) you may set one or more of the following fields to `true`\\n (depending on the resource's Pods you need this behaviour to be changed):\\n \\n* `SGCluster.spec.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.coordinator.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.shards.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGShardedCluster.spec.shards.ovewrites.pods.resources.disableResourcesRequestsSplitFromTotal`\\n* `SGDistributedLogs.spec.resources.disableResourcesRequestsSplitFromTotal`\\n\",\n       \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi)$\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"metadata\",\n  \"spec\"\n ],\n \"title\": \"SG Instance Profile\",\n \"type\": \"object\"\n}"
 }