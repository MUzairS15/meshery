{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "Policy",
  "apiVersion": "rabbitmq.com/v1beta1",
  "displayName": "Policy",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "rabbitmq-cluster-operator",
   "version": "3.19.0",
   "displayName": "rabbitmq-cluster-operator",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://charts.bitnami.com/bitnami/rabbitmq-cluster-operator-3.19.0.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"Policy is the Schema for the policies API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"PolicySpec defines the desired state of Policy\\nhttps://www.rabbitmq.com/parameters.html#policies\",\n   \"properties\": {\n    \"applyTo\": {\n     \"default\": \"all\",\n     \"description\": \"What this policy applies to: 'queues', 'classic_queues', 'quorum_queues', 'streams', 'exchanges', or 'all'.\\nDefault to 'all'.\",\n     \"enum\": [\n      \"queues\",\n      \"classic_queues\",\n      \"quorum_queues\",\n      \"streams\",\n      \"exchanges\",\n      \"all\"\n     ],\n     \"type\": \"string\"\n    },\n    \"definition\": {\n     \"description\": \"Policy definition. Required property.\",\n     \"format\": \"textarea\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Required property; cannot be updated\",\n     \"type\": \"string\"\n    },\n    \"pattern\": {\n     \"description\": \"Regular expression pattern used to match queues and exchanges, e.g. \\\"^amq.\\\".\\nRequired property.\",\n     \"type\": \"string\"\n    },\n    \"priority\": {\n     \"default\": 0,\n     \"description\": \"Default to '0'.\\nIn the event that more than one policy can match a given exchange or queue, the policy with the greatest priority applies.\",\n     \"type\": \"integer\"\n    },\n    \"rabbitmqClusterReference\": {\n     \"description\": \"Reference to the RabbitmqCluster that the policy will be created in.\\nRequired property.\",\n     \"properties\": {\n      \"connectionSecret\": {\n       \"description\": \"Secret contains the http management uri for the RabbitMQ cluster.\\nThe Secret must contain the key `uri`, `username` and `password` or operator will error.\\nHave to set either name or connectionSecret, but not both.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent.\\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\\nTODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"name\": {\n       \"description\": \"The name of the RabbitMQ cluster to reference.\\nHave to set either name or connectionSecret, but not both.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"The namespace of the RabbitMQ cluster to reference.\\nDefaults to the namespace of the requested resource if omitted.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"vhost\": {\n     \"default\": \"/\",\n     \"description\": \"Default to vhost '/'; cannot be updated\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"definition\",\n    \"name\",\n    \"pattern\",\n    \"rabbitmqClusterReference\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Policy\",\n \"type\": \"object\"\n}"
 }