{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "Secret",
  "apiVersion": "secretsmanager.services.k8s.aws/v1alpha1",
  "displayName": "Secret",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "aws-secretsmanager-controller",
   "version": "v0.0.4",
   "displayName": "aws-secretsmanager-controller",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "git://github.com/aws-controllers-k8s/secretsmanager-controller/main/helm"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"Secret is the Schema for the Secrets API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"SecretSpec defines the desired state of Secret.\",\n   \"properties\": {\n    \"description\": {\n     \"description\": \"The description of the secret.\",\n     \"type\": \"string\"\n    },\n    \"forceOverwriteReplicaSecret\": {\n     \"description\": \"Specifies whether to overwrite a secret with the same name in the destination\\nRegion. By default, secrets aren't overwritten.\",\n     \"type\": \"boolean\"\n    },\n    \"kmsKeyID\": {\n     \"description\": \"The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt\\nthe secret value in the secret. An alias is always prefixed by alias/, for\\nexample alias/aws/secretsmanager. For more information, see About aliases\\n(https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html).\\n\\n\\nTo use a KMS key in a different account, use the key ARN or the alias ARN.\\n\\n\\nIf you don't specify this value, then Secrets Manager uses the key aws/secretsmanager.\\nIf that key doesn't yet exist, then Secrets Manager creates it for you automatically\\nthe first time it encrypts the secret value.\\n\\n\\nIf the secret is in a different Amazon Web Services account from the credentials\\ncalling the API, then you can't use aws/secretsmanager to encrypt the secret,\\nand you must create and use a customer managed KMS key.\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"The name of the new secret.\\n\\n\\nThe secret name can contain ASCII letters, numbers, and the following characters:\\n/_+=.@-\\n\\n\\nDo not end your secret name with a hyphen followed by six characters. If\\nyou do so, you risk confusion and unexpected results when searching for a\\nsecret by partial ARN. Secrets Manager automatically adds a hyphen and six\\nrandom characters after the secret name at the end of the ARN.\",\n     \"type\": \"string\"\n    },\n    \"replicaRegions\": {\n     \"description\": \"A list of Regions and KMS keys to replicate secrets.\",\n     \"items\": {\n      \"description\": \"A custom type that specifies a Region and the KmsKeyId for a replica secret.\",\n      \"properties\": {\n       \"kmsKeyID\": {\n        \"type\": \"string\"\n       },\n       \"region\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"secretString\": {\n     \"description\": \"The text data to encrypt and store in this new version of the secret. We\\nrecommend you use a JSON structure of key/value pairs for your secret value.\\n\\n\\nEither SecretString or SecretBinary must have a value, but not both.\\n\\n\\nIf you create a secret by using the Secrets Manager console then Secrets\\nManager puts the protected secret text in only the SecretString parameter.\\nThe Secrets Manager console stores the information as a JSON structure of\\nkey/value pairs that a Lambda rotation function can parse.\",\n     \"properties\": {\n      \"key\": {\n       \"description\": \"Key is the key within the secret\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"name is unique within a namespace to reference a secret resource.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"namespace defines the space within which the secret name must be unique.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"key\"\n     ],\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    },\n    \"tags\": {\n     \"description\": \"A list of tags to attach to the secret. Each tag is a key and value pair\\nof strings in a JSON text string, for example:\\n\\n\\n[{\\\"Key\\\":\\\"CostCenter\\\",\\\"Value\\\":\\\"12345\\\"},{\\\"Key\\\":\\\"environment\\\",\\\"Value\\\":\\\"production\\\"}]\\n\\n\\nSecrets Manager tag key names are case sensitive. A tag with the key \\\"ABC\\\"\\nis a different tag from one with key \\\"abc\\\".\\n\\n\\nIf you check tags in permissions policies as part of your security strategy,\\nthen adding or removing a tag can change permissions. If the completion of\\nthis operation would result in you losing your permissions for this secret,\\nthen Secrets Manager blocks the operation and returns an Access Denied error.\\nFor more information, see Control access to secrets using tags (https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac)\\nand Limit access to identities with tags that match secrets' tags (https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2).\\n\\n\\nFor information about how to format a JSON parameter for the various command\\nline tool environments, see Using JSON for Parameters (https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json).\\nIf your command-line tool or SDK requires quotation marks around the parameter,\\nyou should use single quotes to avoid confusion with the double quotes required\\nin the JSON text.\\n\\n\\nFor tag quotas and naming restrictions, see Service quotas for Tagging (https://docs.aws.amazon.com/general/latest/gr/arg.html#taged-reference-quotas)\\nin the Amazon Web Services General Reference guide.\",\n     \"items\": {\n      \"description\": \"A structure that contains information about a tag.\",\n      \"properties\": {\n       \"key\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"name\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Secret\",\n \"type\": \"object\"\n}"
 }